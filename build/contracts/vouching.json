{
  "contractName": "vouching",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "banking",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "friend",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vouchee",
          "type": "address"
        }
      ],
      "name": "vouch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"banking\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"friend\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vouchee\",\"type\":\"address\"}],\"name\":\"vouch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Lending/Vouching.sol\":\"vouching\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x1f16f9737853b988865ab819d1ebf8b5009defe981c75bc9079e0f40ed2a2e57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e50f827969ca93b0d7bad1e022aa3147c8f390e9f91bb814752e8fbbbe621c\",\"dweb:/ipfs/QmdR2fJ2a3HM7FyC9pGD4JeKF9z6bxqU9FbhMyQfH1sDJH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/Lending/ILoaning.sol\":{\"keccak256\":\"0x2273e2b7dfc1ea51b3b560a29295f799a97e712d757db6c632c82a1b5190b2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cd1ff16f291da3ca8f5ae6c2e76173f466528d1dfc1ccc5f284b412cee8cfdb\",\"dweb:/ipfs/QmWFSHFxH7mhZjjVhVvr9d1wwYYifip8meiTzZJ7j6Nwwx\"]},\"project:/contracts/Lending/Vouching.sol\":{\"keccak256\":\"0x5ec0d531253237f51ffdfce5ce5a3ad39b1d5344c6fc862cfcfeb9589514c045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ac50a576ae09bc95a5f4966a52968640c571826dac7f70aaf0f7505495b43bd\",\"dweb:/ipfs/QmUnVVFcZXon3ugvYuApnA7z25JRekEAwvoMR8gVbndAqi\"]},\"project:/contracts/NFT/NFT.sol\":{\"keccak256\":\"0x0ccdffeb57553295813ee9c61786b933829b6dd38fecdde55064d184e4f6dcfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://217e85a936bc6393401e6e6984a1aac17b20c78c849de760df59aa4e4b566c35\",\"dweb:/ipfs/QmetjSR334mwhBuTbUd9HtFirx91Ft9j31RE3QoMae1c2H\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161070e38038061070e833981810160405281019061003291906100f1565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061016c565b6000815190506100eb81610155565b92915050565b60006020828403121561010757610106610150565b5b6000610115848285016100dc565b91505092915050565b600061012982610130565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61015e8161011e565b811461016957600080fd5b50565b6105938061017b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063dd66e16b1461003b578063fef5a10e1461006b575b600080fd5b61005560048036038101906100509190610399565b61009b565b6040516100629190610445565b60405180910390f35b61008560048036038101906100809190610399565b610351565b604051610092919061042a565b60405180910390f35b6000801515600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060050160009054906101000a900460ff1615151461010e57600080fd5b6006600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020019081526020016000206000015410156101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d90610480565b60405180910390fd5b6000806000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001908152602001600020600001541461023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610460565b60405180910390fd5b33600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166345f43dd8836040518263ffffffff1660e01b8152600401610316919061042a565b600060405180830381600087803b15801561033057600080fd5b505af1158015610344573d6000803e3d6000fd5b5050505060019050919050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061039381610546565b92915050565b6000602082840312156103af576103ae6104ef565b5b60006103bd84828501610384565b91505092915050565b6103cf816104b1565b82525050565b6103de816104c3565b82525050565b60006103f16016836104a0565b91506103fc826104f4565b602082019050919050565b60006104146015836104a0565b915061041f8261051d565b602082019050919050565b600060208201905061043f60008301846103c6565b92915050565b600060208201905061045a60008301846103d5565b92915050565b60006020820190508181036000830152610479816103e4565b9050919050565b6000602082019050818103600083015261049981610407565b9050919050565b600082825260208201905092915050565b60006104bc826104cf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f766f7563686565206c6576656c206973206e6f74203000000000000000000000600082015250565b7f796f7572206c6576656c20697320746f6f206c6f770000000000000000000000600082015250565b61054f816104b1565b811461055a57600080fd5b5056fea2646970667358221220ea830aa22a385bdf690c4797a437ab9d529cc326e094fb6e3f623eff673e672f64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063dd66e16b1461003b578063fef5a10e1461006b575b600080fd5b61005560048036038101906100509190610399565b61009b565b6040516100629190610445565b60405180910390f35b61008560048036038101906100809190610399565b610351565b604051610092919061042a565b60405180910390f35b6000801515600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815260200190815260200160002060050160009054906101000a900460ff1615151461010e57600080fd5b6006600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481526020019081526020016000206000015410156101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d90610480565b60405180910390fd5b6000806000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548152602001908152602001600020600001541461023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610460565b60405180910390fd5b33600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166345f43dd8836040518263ffffffff1660e01b8152600401610316919061042a565b600060405180830381600087803b15801561033057600080fd5b505af1158015610344573d6000803e3d6000fd5b5050505060019050919050565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061039381610546565b92915050565b6000602082840312156103af576103ae6104ef565b5b60006103bd84828501610384565b91505092915050565b6103cf816104b1565b82525050565b6103de816104c3565b82525050565b60006103f16016836104a0565b91506103fc826104f4565b602082019050919050565b60006104146015836104a0565b915061041f8261051d565b602082019050919050565b600060208201905061043f60008301846103c6565b92915050565b600060208201905061045a60008301846103d5565b92915050565b60006020820190508181036000830152610479816103e4565b9050919050565b6000602082019050818103600083015261049981610407565b9050919050565b600082825260208201905092915050565b60006104bc826104cf565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f766f7563686565206c6576656c206973206e6f74203000000000000000000000600082015250565b7f796f7572206c6576656c20697320746f6f206c6f770000000000000000000000600082015250565b61054f816104b1565b811461055a57600080fd5b5056fea2646970667358221220ea830aa22a385bdf690c4797a437ab9d529cc326e094fb6e3f623eff673e672f64736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:30",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:30"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:30"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:30",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:30",
                "type": ""
              }
            ],
            "src": "7:143:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "233:274:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:83:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "281:77:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:79:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:79:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "254:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "263:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "250:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "250:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "275:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "246:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "243:119:30"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "372:128:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "387:15:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:1:30",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "391:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "416:74:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "462:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "473:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "458:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "458:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "482:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "426:31:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "426:64:30"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "416:6:30"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "203:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "214:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "226:6:30",
                "type": ""
              }
            ],
            "src": "156:351:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "553:35:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "563:19:30",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "579:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "573:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "573:9:30"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "563:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "546:6:30",
                "type": ""
              }
            ],
            "src": "513:75:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "639:51:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "649:35:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "678:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "660:17:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:24:30"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "649:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "621:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "631:7:30",
                "type": ""
              }
            ],
            "src": "594:96:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:81:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "751:65:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "766:5:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "773:42:30",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "762:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:54:30"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "751:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "723:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "733:7:30",
                "type": ""
              }
            ],
            "src": "696:126:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "917:28:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "934:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "937:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "927:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "927:12:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "927:12:30"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "828:117:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:28:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1057:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1060:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1050:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:12:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1050:12:30"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "951:117:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1117:79:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1174:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1183:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1186:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1176:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1176:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1176:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1140:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1165:5:30"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1147:17:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:24:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1137:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1137:35:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:43:30"
                  },
                  "nodeType": "YulIf",
                  "src": "1127:63:30"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1110:5:30",
                "type": ""
              }
            ],
            "src": "1074:122:30"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 30,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4076:30",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:30"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:30"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:30",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:30",
                "type": ""
              }
            ],
            "src": "7:139:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:263:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:83:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "266:77:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:79:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:79:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:30"
                  },
                  "nodeType": "YulIf",
                  "src": "228:119:30"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "357:117:30",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "372:15:30",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "386:1:30",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "376:6:30",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "401:63:30",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "436:9:30"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "447:6:30"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "432:3:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "432:22:30"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "456:7:30"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "411:20:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:53:30"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "401:6:30"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:30",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:30",
                "type": ""
              }
            ],
            "src": "152:329:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "552:53:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "569:3:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "592:5:30"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "574:17:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "574:24:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:37:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:37:30"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "540:5:30",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "547:3:30",
                "type": ""
              }
            ],
            "src": "487:118:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "670:50:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "687:3:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "707:5:30"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "692:14:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "692:21:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "680:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:34:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "680:34:30"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "658:5:30",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "665:3:30",
                "type": ""
              }
            ],
            "src": "611:109:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "872:220:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "882:74:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "948:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "953:2:30",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "889:58:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "889:67:30"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "882:3:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1054:3:30"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474",
                      "nodeType": "YulIdentifier",
                      "src": "965:88:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "965:93:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "965:93:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1067:19:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1078:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1083:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1074:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1074:12:30"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1067:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "860:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "868:3:30",
                "type": ""
              }
            ],
            "src": "726:366:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1244:220:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1254:74:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1320:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1325:2:30",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1261:58:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:67:30"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1254:3:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1426:3:30"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0",
                      "nodeType": "YulIdentifier",
                      "src": "1337:88:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1337:93:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1337:93:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1439:19:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1450:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1455:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1446:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1446:12:30"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1439:3:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1232:3:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1240:3:30",
                "type": ""
              }
            ],
            "src": "1098:366:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1568:124:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1578:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1590:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1601:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1586:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1586:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1578:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1658:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1671:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1682:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1667:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1667:17:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1614:43:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1614:71:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1614:71:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1540:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1552:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1563:4:30",
                "type": ""
              }
            ],
            "src": "1470:222:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1790:118:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1800:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1812:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1823:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1808:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1808:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1800:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1874:6:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1887:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1898:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1883:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1883:17:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1836:37:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1836:65:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1836:65:30"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1762:9:30",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1774:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1785:4:30",
                "type": ""
              }
            ],
            "src": "1698:210:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2085:248:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2095:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2107:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2118:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2103:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2103:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2095:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2142:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2153:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2138:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2138:17:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2161:4:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2167:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2157:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2157:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2131:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2131:47:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2131:47:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2187:139:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2321:4:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2195:124:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2195:131:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2187:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2065:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2080:4:30",
                "type": ""
              }
            ],
            "src": "1914:419:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2510:248:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2520:26:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2532:9:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2543:2:30",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2528:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2528:18:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2520:4:30"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2567:9:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2578:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2563:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2563:17:30"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2586:4:30"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2592:9:30"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2582:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2582:20:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2556:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2556:47:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2556:47:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2612:139:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2746:4:30"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2620:124:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2620:131:30"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2612:4:30"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2490:9:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2505:4:30",
                "type": ""
              }
            ],
            "src": "2339:419:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2804:35:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2814:19:30",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2830:2:30",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2824:5:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:9:30"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2814:6:30"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2797:6:30",
                "type": ""
              }
            ],
            "src": "2764:75:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2941:73:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2958:3:30"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2963:6:30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2951:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2951:19:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2951:19:30"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2979:29:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2998:3:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3003:4:30",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2994:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2994:14:30"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2979:11:30"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2913:3:30",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2918:6:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2929:11:30",
                "type": ""
              }
            ],
            "src": "2845:169:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3065:51:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3075:35:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3104:5:30"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3086:17:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3086:24:30"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3075:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3047:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3057:7:30",
                "type": ""
              }
            ],
            "src": "3020:96:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3164:48:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3174:32:30",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3199:5:30"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3192:6:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3192:13:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3185:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3185:21:30"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3174:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3146:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3156:7:30",
                "type": ""
              }
            ],
            "src": "3122:90:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3263:81:30",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3273:65:30",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3288:5:30"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3295:42:30",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3284:3:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3284:54:30"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3273:7:30"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3245:5:30",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3255:7:30",
                "type": ""
              }
            ],
            "src": "3218:126:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3439:28:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3456:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3459:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3449:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3449:12:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3449:12:30"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "3350:117:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3562:28:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3579:1:30",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3582:1:30",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3572:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3572:12:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3572:12:30"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "3473:117:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3702:66:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3724:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3732:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3720:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3720:14:30"
                      },
                      {
                        "hexValue": "766f7563686565206c6576656c206973206e6f742030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3736:24:30",
                        "type": "",
                        "value": "vouchee level is not 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3713:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3713:48:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3713:48:30"
                }
              ]
            },
            "name": "store_literal_in_memory_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3694:6:30",
                "type": ""
              }
            ],
            "src": "3596:172:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3880:65:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3902:6:30"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3910:1:30",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3898:3:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3898:14:30"
                      },
                      {
                        "hexValue": "796f7572206c6576656c20697320746f6f206c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3914:23:30",
                        "type": "",
                        "value": "your level is too low"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3891:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3891:47:30"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3891:47:30"
                }
              ]
            },
            "name": "store_literal_in_memory_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3872:6:30",
                "type": ""
              }
            ],
            "src": "3774:171:30"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3994:79:30",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4051:16:30",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4060:1:30",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4063:1:30",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4053:6:30"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4053:12:30"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4053:12:30"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4017:5:30"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4042:5:30"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "4024:17:30"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4024:24:30"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4014:2:30"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4014:35:30"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4007:6:30"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4007:43:30"
                  },
                  "nodeType": "YulIf",
                  "src": "4004:63:30"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3987:5:30",
                "type": ""
              }
            ],
            "src": "3951:122:30"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474(memPtr) {\n\n        mstore(add(memPtr, 0), \"vouchee level is not 0\")\n\n    }\n\n    function store_literal_in_memory_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0(memPtr) {\n\n        mstore(add(memPtr, 0), \"your level is too low\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 30,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "202:1177:23:-:0;;;494:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;539:7;534:4;;:12;;;;;;;;;;;;;;;;;;573:4;;;;;;;;;;;558:5;;:20;;;;;;;;;;;;;;;;;;494:95;202:1177;;7:143:30;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;202:1177:23:-;;;;;;;",
  "deployedSourceMap": "202:1177:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;674:703;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;350:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;674:703;722:12;833:5;798:40;;:4;:25;803:7;:19;811:10;803:19;;;;;;;;;;;;;;;;798:25;;;;;;;;;;;:33;;;;;;;;;;;;:40;;;790:49;;;;;;958:1;920:4;:25;925:7;:19;933:10;925:19;;;;;;;;;;;;;;;;920:25;;;;;;;;;;;:36;;;:39;;912:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1137:1;1102:4;:22;1107:7;:16;1115:7;1107:16;;;;;;;;;;;;;;;;1102:22;;;;;;;;;;;:33;;;:36;1094:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1236:10;1220:6;:15;1227:7;1220:15;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1325:5;;;;;;;;;;;:15;;;1341:7;1325:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:4;1359:11;;674:703;;;:::o;350:40::-;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:30:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:109::-;692:21;707:5;692:21;:::i;:::-;687:3;680:34;611:109;;:::o;726:366::-;868:3;889:67;953:2;948:3;889:67;:::i;:::-;882:74;;965:93;1054:3;965:93;:::i;:::-;1083:2;1078:3;1074:12;1067:19;;726:366;;;:::o;1098:::-;1240:3;1261:67;1325:2;1320:3;1261:67;:::i;:::-;1254:74;;1337:93;1426:3;1337:93;:::i;:::-;1455:2;1450:3;1446:12;1439:19;;1098:366;;;:::o;1470:222::-;1563:4;1601:2;1590:9;1586:18;1578:26;;1614:71;1682:1;1671:9;1667:17;1658:6;1614:71;:::i;:::-;1470:222;;;;:::o;1698:210::-;1785:4;1823:2;1812:9;1808:18;1800:26;;1836:65;1898:1;1887:9;1883:17;1874:6;1836:65;:::i;:::-;1698:210;;;;:::o;1914:419::-;2080:4;2118:2;2107:9;2103:18;2095:26;;2167:9;2161:4;2157:20;2153:1;2142:9;2138:17;2131:47;2195:131;2321:4;2195:131;:::i;:::-;2187:139;;1914:419;;;:::o;2339:::-;2505:4;2543:2;2532:9;2528:18;2520:26;;2592:9;2586:4;2582:20;2578:1;2567:9;2563:17;2556:47;2620:131;2746:4;2620:131;:::i;:::-;2612:139;;2339:419;;;:::o;2845:169::-;2929:11;2963:6;2958:3;2951:19;3003:4;2998:3;2994:14;2979:29;;2845:169;;;;:::o;3020:96::-;3057:7;3086:24;3104:5;3086:24;:::i;:::-;3075:35;;3020:96;;;:::o;3122:90::-;3156:7;3199:5;3192:13;3185:21;3174:32;;3122:90;;;:::o;3218:126::-;3255:7;3295:42;3288:5;3284:54;3273:65;;3218:126;;;:::o;3473:117::-;3582:1;3579;3572:12;3596:172;3736:24;3732:1;3724:6;3720:14;3713:48;3596:172;:::o;3774:171::-;3914:23;3910:1;3902:6;3898:14;3891:47;3774:171;:::o;3951:122::-;4024:24;4042:5;4024:24;:::i;:::-;4017:5;4014:35;4004:63;;4063:1;4060;4053:12;4004:63;3951:122;:::o",
  "source": "// SPDX-License-Identifier: MIT\n//vouchee -blacklisted person who is being vouched for by a high level person.\npragma solidity 0.8.7;\nimport \"../NFT/NFT.sol\";\nimport \"./ILoaning.sol\";\n\n//vouch contract\ncontract vouching is data{\n    //friend is the link between the vouchee and the vouch giver so you know who to penalise incase of second defult\n    mapping (address=>address) public friend;\n    //banking is the main krredit bank contract address\n    ILoaning loans;\n    address bank;\n        constructor(address banking){\n          bank=banking;\n          loans=ILoaning(bank);\n        }\n\n    //vouch function begins here, it only takes address of the vouch reciever.\n    function vouch(address vouchee) public returns (bool success){\n        //person cannot have a pending loan.\n        require(cred[Primary[msg.sender]].pending==false);\n\n        //checks if his level is high enough (6 is dummy num)\n        require(cred[Primary[msg.sender]].creditsc_c>=6,\"your level is too low\");\n        //makes sure the receiver lev is at 0 so this feature cannot increase level of non-zero ppl\n        require(cred[Primary[vouchee]].creditsc_c==0,\"vouchee level is not 0\");\n        //tags person who vouched for vouchee\n        friend[vouchee]=msg.sender;\n        //increases level and makes vouchee eligible for loans again\n        loans.increment(vouchee);\n        return true;\n    }\n}\n",
  "sourcePath": "/Users/vibhu/node_manager/node_modules/Solidity/Zeno/contracts/Lending/Vouching.sol",
  "ast": {
    "absolutePath": "project:/contracts/Lending/Vouching.sol",
    "exportedSymbols": {
      "Address": [
        2582
      ],
      "Context": [
        2604
      ],
      "Counters": [
        2678
      ],
      "Credit": [
        5358
      ],
      "ERC165": [
        2905
      ],
      "ERC721": [
        2096
      ],
      "ERC721Burnable": [
        2260
      ],
      "IERC165": [
        2917
      ],
      "IERC721": [
        2212
      ],
      "IERC721Metadata": [
        2287
      ],
      "IERC721Receiver": [
        2230
      ],
      "ILoaning": [
        3599
      ],
      "Ownable": [
        497
      ],
      "Strings": [
        2881
      ],
      "data": [
        5232
      ],
      "vouching": [
        4672
      ]
    },
    "id": 4673,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4582,
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "111:22:23"
      },
      {
        "absolutePath": "project:/contracts/NFT/NFT.sol",
        "file": "../NFT/NFT.sol",
        "id": 4583,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4673,
        "sourceUnit": 5359,
        "src": "134:24:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Lending/ILoaning.sol",
        "file": "./ILoaning.sol",
        "id": 4584,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4673,
        "sourceUnit": 3600,
        "src": "159:24:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4585,
              "name": "data",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5232,
              "src": "223:4:23"
            },
            "id": 4586,
            "nodeType": "InheritanceSpecifier",
            "src": "223:4:23"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4672,
        "linearizedBaseContracts": [
          4672,
          5232
        ],
        "name": "vouching",
        "nameLocation": "211:8:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fef5a10e",
            "id": 4590,
            "mutability": "mutable",
            "name": "friend",
            "nameLocation": "384:6:23",
            "nodeType": "VariableDeclaration",
            "scope": 4672,
            "src": "350:40:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 4589,
              "keyType": {
                "id": 4587,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "359:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "350:26:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 4588,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "368:7:23",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4593,
            "mutability": "mutable",
            "name": "loans",
            "nameLocation": "461:5:23",
            "nodeType": "VariableDeclaration",
            "scope": 4672,
            "src": "452:14:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILoaning_$3599",
              "typeString": "contract ILoaning"
            },
            "typeName": {
              "id": 4592,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4591,
                "name": "ILoaning",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3599,
                "src": "452:8:23"
              },
              "referencedDeclaration": 3599,
              "src": "452:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILoaning_$3599",
                "typeString": "contract ILoaning"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4595,
            "mutability": "mutable",
            "name": "bank",
            "nameLocation": "480:4:23",
            "nodeType": "VariableDeclaration",
            "scope": 4672,
            "src": "472:12:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4594,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "472:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4610,
              "nodeType": "Block",
              "src": "522:67:23",
              "statements": [
                {
                  "expression": {
                    "id": 4602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4600,
                      "name": "bank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4595,
                      "src": "534:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4601,
                      "name": "banking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4597,
                      "src": "539:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "534:12:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4603,
                  "nodeType": "ExpressionStatement",
                  "src": "534:12:23"
                },
                {
                  "expression": {
                    "id": 4608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4604,
                      "name": "loans",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4593,
                      "src": "558:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILoaning_$3599",
                        "typeString": "contract ILoaning"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4606,
                          "name": "bank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4595,
                          "src": "573:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 4605,
                        "name": "ILoaning",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "564:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ILoaning_$3599_$",
                          "typeString": "type(contract ILoaning)"
                        }
                      },
                      "id": 4607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "564:14:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILoaning_$3599",
                        "typeString": "contract ILoaning"
                      }
                    },
                    "src": "558:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILoaning_$3599",
                      "typeString": "contract ILoaning"
                    }
                  },
                  "id": 4609,
                  "nodeType": "ExpressionStatement",
                  "src": "558:20:23"
                }
              ]
            },
            "id": 4611,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4597,
                  "mutability": "mutable",
                  "name": "banking",
                  "nameLocation": "514:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4611,
                  "src": "506:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "505:17:23"
            },
            "returnParameters": {
              "id": 4599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:0:23"
            },
            "scope": 4672,
            "src": "494:95:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4670,
              "nodeType": "Block",
              "src": "735:642:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4619,
                              "name": "cred",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5227,
                              "src": "798:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Credit_card_$5222_storage_$",
                                "typeString": "mapping(uint256 => struct data.Credit_card storage ref)"
                              }
                            },
                            "id": 4624,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 4620,
                                "name": "Primary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5231,
                                "src": "803:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 4623,
                              "indexExpression": {
                                "expression": {
                                  "id": 4621,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "811:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "811:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "803:19:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "798:25:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Credit_card_$5222_storage",
                              "typeString": "struct data.Credit_card storage ref"
                            }
                          },
                          "id": 4625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5191,
                          "src": "798:33:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 4626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "833:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "798:40:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "790:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:49:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4629,
                  "nodeType": "ExpressionStatement",
                  "src": "790:49:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4631,
                              "name": "cred",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5227,
                              "src": "920:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Credit_card_$5222_storage_$",
                                "typeString": "mapping(uint256 => struct data.Credit_card storage ref)"
                              }
                            },
                            "id": 4636,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 4632,
                                "name": "Primary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5231,
                                "src": "925:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 4635,
                              "indexExpression": {
                                "expression": {
                                  "id": 4633,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "933:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "933:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "925:19:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "920:25:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Credit_card_$5222_storage",
                              "typeString": "struct data.Credit_card storage ref"
                            }
                          },
                          "id": 4637,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creditsc_c",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5181,
                          "src": "920:36:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "36",
                          "id": 4638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "958:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_6_by_1",
                            "typeString": "int_const 6"
                          },
                          "value": "6"
                        },
                        "src": "920:39:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7572206c6576656c20697320746f6f206c6f77",
                        "id": 4640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "960:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0",
                          "typeString": "literal_string \"your level is too low\""
                        },
                        "value": "your level is too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_613cf260333770f9a693fec5123e69ba832d36bcd73322d2f6dbd8c543b23fa0",
                          "typeString": "literal_string \"your level is too low\""
                        }
                      ],
                      "id": 4630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "912:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "912:72:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4642,
                  "nodeType": "ExpressionStatement",
                  "src": "912:72:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4644,
                              "name": "cred",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5227,
                              "src": "1102:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Credit_card_$5222_storage_$",
                                "typeString": "mapping(uint256 => struct data.Credit_card storage ref)"
                              }
                            },
                            "id": 4648,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 4645,
                                "name": "Primary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5231,
                                "src": "1107:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 4647,
                              "indexExpression": {
                                "id": 4646,
                                "name": "vouchee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4613,
                                "src": "1115:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1107:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1102:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Credit_card_$5222_storage",
                              "typeString": "struct data.Credit_card storage ref"
                            }
                          },
                          "id": 4649,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "creditsc_c",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5181,
                          "src": "1102:33:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1137:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1102:36:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f7563686565206c6576656c206973206e6f742030",
                        "id": 4652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1139:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474",
                          "typeString": "literal_string \"vouchee level is not 0\""
                        },
                        "value": "vouchee level is not 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44dbf32fe55179d4a902a760f9d5d88a110fa69781382914176afe10c64ef474",
                          "typeString": "literal_string \"vouchee level is not 0\""
                        }
                      ],
                      "id": 4643,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1094:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1094:70:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4654,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:70:23"
                },
                {
                  "expression": {
                    "id": 4660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4655,
                        "name": "friend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4590,
                        "src": "1220:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 4657,
                      "indexExpression": {
                        "id": 4656,
                        "name": "vouchee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4613,
                        "src": "1227:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1220:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4658,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1236:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1236:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1220:26:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4661,
                  "nodeType": "ExpressionStatement",
                  "src": "1220:26:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4665,
                        "name": "vouchee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4613,
                        "src": "1341:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4662,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4593,
                        "src": "1325:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILoaning_$3599",
                          "typeString": "contract ILoaning"
                        }
                      },
                      "id": 4664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3570,
                      "src": "1325:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1325:24:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4667,
                  "nodeType": "ExpressionStatement",
                  "src": "1325:24:23"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1366:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4617,
                  "id": 4669,
                  "nodeType": "Return",
                  "src": "1359:11:23"
                }
              ]
            },
            "functionSelector": "dd66e16b",
            "id": 4671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vouch",
            "nameLocation": "683:5:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4613,
                  "mutability": "mutable",
                  "name": "vouchee",
                  "nameLocation": "697:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4671,
                  "src": "689:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "688:17:23"
            },
            "returnParameters": {
              "id": 4617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4616,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "727:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 4671,
                  "src": "722:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4615,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:14:23"
            },
            "scope": 4672,
            "src": "674:703:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4673,
        "src": "202:1177:23",
        "usedErrors": []
      }
    ],
    "src": "111:1269:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-21T04:30:58.328Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}